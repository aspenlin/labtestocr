//code for buliding tesseract and tesstrain(tesstutorial) from source for Ubuntu 16.04, Jingjing LIN, 2019-07
//can also refer to resources available on Internet

change directory:
cd leptonica-1.78.0/tesseract (I accidently biuld tesseract in the leptonica folder, shouldn't do this)

//SCROLLVIEW doesn't really work on a server without display, unless use xterm?
export SCROLLVIEW_PATH=$PWD/java

//location of configs for tesseract
/usr/local/share/tessdata/configs/whitelist.txt


sudo apt-get install g++ # or clang++ (presumably)
chose g++
sudo apt-get install autoconf automake libtool
sudo apt-get install pkg-config
sudo apt-get install libpng-dev
sudo apt-get install libjpeg8-dev
sudo apt-get install libtiff5-dev
sudo apt-get install zlib1g-dev

for training
sudo apt-get install libicu-dev
sudo apt-get install libpango1.0-dev
sudo apt-get install libcairo2-dev


sudo apt-get install libleptonica-dev
Error: Unable to locate package libleptonica-dev

Installed Leptonica1.78.0 manually

Install tesseract with training
git clone https://github.com/tesseract-ocr/tesseract.git
cd tesseract
    ./autogen.sh
    ./configure
    make
    sudo make install
    sudo ldconfig
    make training
    sudo make training-install

Install extra laguages:
git clone https://github.com/tesseract-ocr/tessdata.git
then move the necessary .traineddata to /usr/local/share/tessdata

Install emacs:
Was having error install, but after ‘sudo apt-get update’, install using sudo apt-get install emacs works perfectly


Install ScrollView.jar
Sudo apt-get install default-jdk to install javac
Downloaded ScrollView.jar to tesseract/java
Make ScrollVIew.jar

sudo apt install ttf-mscorefonts-installer
sudo apt install fonts-dejavu
fc-cache -vf


set up for tessturotial:

mkdir ~/tesstutorial
cd ~/tesstutorial

mkdir langdata
cd langdata
wget https://raw.githubusercontent.com/tesseract-ocr/langdata_lstm/master/radical-stroke.txt
wget https://raw.githubusercontent.com/tesseract-ocr/langdata_lstm/master/common.punc
wget https://raw.githubusercontent.com/tesseract-ocr/langdata_lstm/master/font_properties
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/Latin.unicharset
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/Latin.xheights
mkdir eng
cd eng
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/eng/eng.training_text
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/eng/eng.punc
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/eng/eng.numbers
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/eng/eng.wordlist

cd ~/tesstutorial
git clone --depth 1 https://github.com/tesseract-ocr/tesseract.git
cd tesseract/tessdata
wget https://github.com/tesseract-ocr/tessdata_best/raw/master/eng.traineddata
wget https://github.com/tesseract-ocr/tessdata_best/raw/master/heb.traineddata
wget https://github.com/tesseract-ocr/tessdata_best/raw/master/chi_sim.traineddata


Downloaded Latin.unicharset and Latin.xheights to langdata by:
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/Latin.unicharset

wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/Latin.unicharset
in langdata folder


src/training/tesstrain.sh --fonts_dir /usr/share/fonts --lang eng --linedata_only \
  --noextract_font_properties --langdata_dir ../langdata \
  --tessdata_dir ./tessdata --output_dir ~/tesstutorial/engtrain

src/training/tesstrain.sh --fonts_dir /usr/share/fonts --lang eng --linedata_only \
  --noextract_font_properties --langdata_dir ../langdata \
  --tessdata_dir ./tessdata \
  --fontlist "Impact Condensed" --output_dir ~/tesstutorial/engeval


(If it runs into error, copy paste the code and run again)
Runs after move eng.traineddata from tessdata/best to tessdata
The above command created engeval and engtrain in tesstutorial folder


Training from scratch
mkdir -p ~/tesstutorial/engoutput
lstmtraining --debug_interval 100 \
  --traineddata ~/tesstutorial/engtrain/eng/eng.traineddata \
  --net_spec '[1,36,0,1 Ct3,3,16 Mp3,3 Lfys48 Lfx96 Lrx96 Lfx256 O1c111]' \
  --model_output ~/tesstutorial/engoutput/base --learning_rate 20e-4 \
  --train_listfile ~/tesstutorial/engtrain/eng.training_files.txt \
  --eval_listfile ~/tesstutorial/engeval/eng.training_files.txt \
  --max_iterations 5000 &>~/tesstutorial/engoutput/basetrain.log

In a separate window monitor the log file:
tail -f ~/tesstutorial/engoutput/basetrain.log

error:
No X11 DISPLAY variable was set
Works after adding -Y in ssh command and also (enable X11 display)
Sudo apt-get install openbox
Sudo apt-get install xorg
‘Xterm &’ can be used to check whether X11 Display is enabled in Ubuntu server

Test training result
On ‘Impact’ font
lstmeval --model ~/tesstutorial/engoutput/base_checkpoint \
  --traineddata ~/tesstutorial/engtrain/eng/eng.traineddata \
  --eval_listfile ~/tesstutorial/engeval/eng.training_files.txt
High error rate
On 4500 or so fonts
lstmeval --model tessdata/best/eng.traineddata --traineddata ~/tesstutorial/engtrain/eng/eng.traineddata --eval_listfile ~/tesstutorial/engeval/eng.training_files.txt
low error rate
on full model:
--model tessdata/best/eng.traineddata --traineddata ~/tesstutorial/engtrain/eng/eng.traineddata --eval_listfile ~/tesstutorial/engtrain/eng.training_files.txt
Lowest error rate







Training
At tesstutorial/langdata/
mkdir chi_sim
cd chi_sim
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/chi_sim/chi_sim.training_text
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/chi_sim/chi_sim.punc
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/chi_sim/chi_sim.numbers
wget https://raw.githubusercontent.com/tesseract-ocr/langdata/master/chi_sim/chi_sim.wordlist
(attention: files in langdata_lstm are much larger than files in langdata, will result in failure when training because the .training_text file is too large)



grep ↓ langdata/chi_sim/chi_sim.training_text

using nano to insert new chars to chi_sim.training_text

cd leptonica-1.78.0/tesseract


from tesstutorial/tesseract run
src/training/tesstrain.sh --fonts_dir /usr/share/fonts --lang chi_sim --linedata_only \
  --noextract_font_properties --langdata_dir ../langdata \
  --tessdata_dir ./tessdata --output_dir ~/tesstutorial/trainarrows

Problem could not find font named ‘AR PL UKai CN’

text2image --find_fonts --text ./langdata/chi_sim/chi_sim.training_text --outputbase ./langdata/chi_sim/  --min_coverage 0.999  --fonts_dir=/usr/share/fonts/


how to install fonts?
Sudo apt-get install *** (need to find from the web)

fc-list :lang=zh (list all Chinese fonts available in the system)
fc-match Arial

some fonts cannot be found and installed from internet, added the following to src/training/language-specific.sh instead (these can also be found in langdata/font_properties, otherwise need to add them to font_properties too)

   "AR PL UKai HK" \
    "AR PL UKai TW" \
    "AR PL UKai TW MBE" \
    "AR PL UKai Patched" \
    "AR PL UMing CN, Light," \
    "AR PL UMing HK Light" \
    "AR PL UMing TW Light" \
    "AR PL UMing TW MBE Light" \
    "AR PL UMing Patched Light" \
    "Arial Unicode MS Regular" \
Useful links:
https://github.com/tesseract-ocr/tesseract/wiki/Fonts
https://github.com/tesseract-ocr/langdata_lstm/blob/master/chi_sim/okfonts.txt
https://github.com/tesseract-ocr/langdata/blob/master/font_properties

now 

from tesstutorial/tesseract run

(this step creates training data, the training data created here is equivalent to the data used to train base tesseract not langdata_lstm)

src/training/tesstrain.sh --fonts_dir /usr/share/fonts --lang chi_sim --linedata_only \
  --noextract_font_properties --langdata_dir ../langdata \
  --tessdata_dir ./tessdata --output_dir ~/tesstutorial/trainarrows2

(create evaluation data for the font in fontlist)

src/training/tesstrain.sh --fonts_dir /usr/share/fonts --lang chi_sim --linedata_only \
  --noextract_font_properties --langdata_dir ../langdata \
  --tessdata_dir ./tessdata \
  --fontlist " AR PL UKai TW " --output_dir ~/tesstutorial/evalarrows2


combine_tessdata -e tessdata/best/chi_sim.traineddata \
  ~/tesstutorial/trainarrows2/chi_sim.lstm
(created chi_sim.lstm file)

lstmtraining --model_output ~/tesstutorial/trainarrows2/arrows \
  --continue_from ~/tesstutorial/trainarrows2/arrows_checkpoint\
  --traineddata ~/tesstutorial/trainarrows2/chi_sim/chi_sim.traineddata \
  --old_traineddata tessdata/best/chi_sim.traineddata \
  --train_listfile ~/tesstutorial/trainarrows2/chi_sim.training_files.txt \
  --max_iterations 3600


combine_tessdata -d tesstutorial/tesseract/tessdata/best/chi_sim.traineddata
result:
Version string:4.00.00alpha:chi_sim:synth20170629:[1,48,0,1Ct3,3,16Mp3,3Lfys64Lfx96Lrx96Lfx512O1c1]
0:config:size=1966, offset=192
17:lstm:size=12152851, offset=2158
18:lstm-punc-dawg:size=282, offset=12155009
19:lstm-word-dawg:size=590634, offset=12155291
20:lstm-number-dawg:size=82, offset=12745925
21:lstm-unicharset:size=258834, offset=12746007
22:lstm-recoder:size=72494, offset=13004841
23:version:size=84, offset=13077335


lstmeval --model ~/tesstutorial/trainarrows/arrows_checkpoint \
  --traineddata ~/tesstutorial/trainarrows/chi_sim/chi_sim.traineddata \
  --eval_listfile ~/tesstutorial/trainarrows/chi_sim.training_files.txt


lstmeval --model ~/tesstutorial/trainarrows/arrows_checkpoint \
  --traineddata ~/tesstutorial/trainarrows/chi_sim/chi_sim.traineddata \
  --eval_listfile ~/tesstutorial/evalarrows/chi_sim.training_files.txt


lstmeval --model ~/tesstutorial/trainarrows2/arrows_checkpoint \
  --traineddata ~/tesstutorial/trainarrows2/chi_sim/chi_sim.traineddata \
  --eval_listfile ~/tesstutorial/evalarrows2/chi_sim.training_files.txt 2>&1 |
  grep ↑


lstmtraining --stop_training \
  --continue_from ~/tesstutorial/trainarrows2/arrows_checkpoint \
  --traineddata ~/tesstutorial/trainarrows2/chi_sim/chi_sim.traineddata \
  --model_output ~/tesstutorial/trainarrows2/chi_sim.traineddata







190617 to check why arrows don’t work after training, now test on ± to see whether it works

grep ± langdata/chi_sim/chi_sim.training_text
nano langdata/chi_sim/chi_sim.training_text
inserted ± 


src/training/tesstrain.sh --fonts_dir /usr/share/fonts --lang chi_sim --linedata_only \
  --noextract_font_properties --langdata_dir ../langdata \
  --tessdata_dir ./tessdata --output_dir ~/tesstutorial/trainplusminuszh


src/training/tesstrain.sh --fonts_dir /usr/share/fonts --lang chi_sim --linedata_only \
  --noextract_font_properties --langdata_dir ../langdata \
  --tessdata_dir ./tessdata \
  --fontlist " AR PL UKai TW " --output_dir ~/tesstutorial/evalplusminuszh


combine_tessdata -e tessdata/best/chi_sim.traineddata \
  ~/tesstutorial/trainplusminuszh/chi_sim.lstm


lstmtraining --model_output ~/tesstutorial/trainplusminuszh/plusminuszh \
  --continue_from ~/tesstutorial/trainplusminuszh/chi_sim.lstm \
  --traineddata ~/tesstutorial/trainplusminuszh/chi_sim/chi_sim.traineddata \
  --old_traineddata tessdata/best/chi_sim.traineddata \
  --train_listfile ~/tesstutorial/trainplusminuszh/chi_sim.training_files.txt \
  --max_iterations 3600
